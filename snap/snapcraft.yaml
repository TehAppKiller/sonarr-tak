name: sonarr-tak
summary: UnOfficial release of Sonarr v4
description: |
  **Sonarr is a PVR for Usenet and BitTorrent users.**
  It can monitor multiple RSS feeds for new episodes of your favorite shows
  and will grab, sort and rename them. It can also be configured
  to automatically upgrade the quality of files already downloaded
  when a better quality format becomes available.

  * The web interface is accessible by default at http://localhost:8989
  * See https://sonarr.tv for more details.


  **Sonarr Release 4+**
  * Mono is no more required (you can now use HTTPS certificate)
  * Core20 is still required for dependencies
  * You must Backup and Restore your configuration for transition from v3 to v4
  * Update All Series to get back Series covers...
  * Service is restarted on any condition.

  **Post install commands required to access media folders and see resources :**

  sudo snap connect sonarr-tak:removable-media

  sudo snap connect sonarr-tak:mount-observe
  
  **Post install commands required to access home folder :**
  
  sudo snap connect sonarr-tak:home
  
  **!!! Files can only be written in a directory owned by 'root' !!!**
  
  This is due to current behavior and restrictions of snaps running as daemon by Canonical.\
  Check documentation on GitHub: https://github.com/TehAppKiller/sonarr-tak
website: https://sonarr.tv
source-code: https://github.com/TehAppKiller/sonarr-tak
issues: https://github.com/TehAppKiller/sonarr-tak/issues
contact: tehappkiller@proton.me
donation: https://whydonate.com/en/fundraising/help-teh-devz
license: MIT
icon: icon.svg
grade: stable
confinement: strict
base: core20
adopt-info: sonarr
architectures:
  - build-on: [amd64]
  - build-on: [arm64]
  - build-on: [armhf]

apps:
  sonarr:
    command: bin/run-sonarr.sh
    daemon: simple
    restart-condition: always
    plugs:
      - mount-observe
      - network
      - network-bind
      - removable-media
      - home
      
plugs:
  home:
    read: all

parts:
  sonarr:
    plugin: nil
    source: .
    override-pull: |
      # Architecture
      case "$SNAPCRAFT_TARGET_ARCH" in
        amd64) SRC_ARCH="x64" ;;
        arm64) SRC_ARCH="arm64" ;;
        armhf) SRC_ARCH="arm" ;;
      esac

      # Pull
      rm -rf $SNAPCRAFT_PART_SRC/{,.[!.],..?}*
      wget "https://services.sonarr.tv/v1/download/main/latest?version=4&os=linux&arch=$SRC_ARCH" -O srcfile
      tar xvf srcfile

      snapcraftctl pull
    override-build: |
      # Architecture
      case "$SNAPCRAFT_TARGET_ARCH" in
        amd64) SRC_ARCH="x64" ;;
        arm64) SRC_ARCH="arm64" ;;
        armhf) SRC_ARCH="arm" ;;
      esac

      # Get Last Source Tag version and Check Snap (with same Source) version
      src_version=$(curl -sL "https://services.sonarr.tv/v1/update/main/changes?os=linux&runtime=netcore&arch=$SRC_ARCH" | sed -nre "s/^[^0-9]*([0-9\.]*).*/\1/p")
      echo "Source last tag: ${src_version}"
      snap_last_version=$(curl -sL -H "Snap-Device-Series: 16" "https://api.snapcraft.io/v2/snaps/info/sonarr-tak?architecture=${SNAPCRAFT_TARGET_ARCH}&fields=version" | sed -nre "s/^.*\"stable\"\,\"track\"\:\"latest\"\}\,\"version\"\:\"([^\"]*)\".*/\1/p");
      echo "Snap last version: ${snap_last_version}"
      snap_build_with_same_version=$(echo $snap_last_version | sed -nre "s/^($src_version.*).*/\1/p");
      # Same version ?
      if [ -z "$snap_build_with_same_version" ]
      then
        new_snap_version="${src_version}";
      else
        # Get snap build version
        snap_build=$(echo $snap_build_with_same_version | sed -nre 's/^.*-v([0-9]*).*/\1/p');
        # Already a build version ?
        if [ -z "$snap_build" ]
        then
          # init @v2
          new_snap_build="2";
        else
          # increment @v+1
          new_snap_build=$(($snap_build+1));
        fi

        new_snap_version="${src_version}-v${new_snap_build}";
      fi

      snapcraftctl set-version $new_snap_version

      # Build
      INST_DIR="$SNAPCRAFT_PART_INSTALL/Sonarr"
      mkdir -p "$INST_DIR"
      cp -a Sonarr/* $INST_DIR

      snapcraftctl build
    build-packages:
      - curl
      - wget
      - libssl-dev
    prime:
      - Sonarr

  local:
    plugin: dump
    source: snap/local
    override-prime: |
      snapcraftctl prime
      chmod +rx $SNAPCRAFT_PRIME/bin/run-sonarr.sh

  deps:
    plugin: nil
    source: .
    stage-packages:
      - liblttng-ust0
      - sqlite3
      - libicu66
    stage:
      - usr/bin/sqlite*
      - usr/lib
